plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.runtime' version '1.13.1'
    id "de.undercouch.download" version "5.6.0"
}

group 'org.example'
version '3.0'

def protocversion = "27.4"

def currentOs = org.gradle.internal.os.OperatingSystem.current()

application {
    mainClassName = "fqlite.base.JARStarter"
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs "resources"
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

javafx {
    version = "21"
    modules = [
            'javafx.base',
            'javafx.controls',
            'javafx.swing',
            'javafx.web',
            'javafx.fxml',
            'javafx.graphics',
            'javafx.media'
    ]
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fqlite.base.JARStarter'
        )
    }
}


compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

dependencies {
	implementation group: 'com.googlecode.plist', name: 'dd-plist', version: '1.28'
    implementation group: 'org.antlr', name: 'antlr4', version: '4.8'
    implementation group: 'org.apache.avro', name: 'avro', version: '1.11.1'
    implementation group: 'nl.pvanassen', name: 'bplist', version: '1.0.0'
    implementation group: 'org.mongodb', name: 'bson', version: '3.6.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'commons-io', name: 'commons-io', version: '2.14.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.2'
    implementation group: 'fr.brouillard.oss', name: 'cssfx', version: '11.5.1'
    implementation group: 'org.apache.pdfbox', name: 'fontbox', version: '3.0.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-core', version: '12.3.1'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-javafx', version: '12.3.1'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-materialdesign-pack', version: '12.3.1'
    implementation group: 'tech.units', name: 'indriya', version: '2.1.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.16.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation group: 'org.msgpack', name: 'msgpack-core', version: '0.9.0'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '3.0.0'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox-io', version: '3.0.0'
    implementation group: 'com.dlsc.pdfviewfx', name: 'pdfviewfx', version: '3.0.0'
    implementation group: 'trust.nccgroup', name: 'readablethrift', version: '1.0.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'
    implementation group: 'javax.measure', name: 'unit-api', version: '2.2'
    implementation group: 'com.dlsc.unitfx', name: 'unitfx', version: '1.0.10'
    implementation group: 'tech.uom.lib', name: 'uom-lib-common', version: '2.1'

    implementation files('lib/FxTextEditor.jar')
    implementation files('lib/SerializationDumper-v1.13.jar')
    implementation files('lib/javafx-swt.jar')

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

task downloadProtoc(type: Download) {
    def protocOsName = ""
    if (currentOs.windows) {
        protocOsName = "win64"
    } else if (currentOs.linux) {
        protocOsName = "linux-x86_64"
    } else if (currentOs.macOsX) {
        protocOsName = "osx-universal_binary"
    }

    var fileName = "protoc-${protocversion}-${protocOsName}.zip"
    var protocUrl = "https://github.com/protocolbuffers/protobuf/releases/download/v${protocversion}/" + fileName
    src protocUrl
    dest new File(temporaryDir, fileName)
}

task downloadAndUnzipProtoc(dependsOn: downloadProtoc, type: Copy) {
    from zipTree(downloadProtoc.dest)
    into layout.buildDirectory.dir('protoc')
}

tasks.named('jpackage') {
    dependsOn downloadAndUnzipProtoc
}

tasks.jpackage.doFirst {
    def fqliteJpackageDirectory = "build/jpackage/"
    if (currentOs.windows) {
        fqliteJpackageDirectory += "fqlite"
    } else if (currentOs.linux) {
        fqliteJpackageDirectory += "fqlite/lib"
    } else if (currentOs.macOsX) {
        fqliteJpackageDirectory += "fqlite.app/Contents/MacOS"
    }
    copy {
        from layout.buildDirectory.dir('protoc')
        into "$fqliteJpackageDirectory/protoc"
    }
    copy {
        from layout.projectDirectory
        include 'proto.run', 'proto.sh', 'protoc.bat'
        into "$fqliteJpackageDirectory"
    }
}


runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        noConsole = true
    }

    jpackage {
        installerOptions += ['--resource-dir', "resources"]

        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'fqlite', '--linux-shortcut']
        } else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'fqlite']
        }
    }
}